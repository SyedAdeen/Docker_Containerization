making the node express project

mkdir dock-node-app
cd dock-node-app
npm init -y
npm install express
make index.js file to run (define port and ip)

make Dockerfile 

FROM  node:20.15.0-alpine

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install

COPY . .

EXPOSE 3000

CMD [ "node", "index.js" ]


docker build -t node-docker-app .

docker run -p 3000:3000 node-docker-app


------------------------------------------
INCASE of Express, Node, MYSQL

with Dockerfile you have to create a docker-compose.yaml

in which you will be describing the services used

services:
  app:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: admin
      DB_NAME: orm_db

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: orm_db
    ports:
      - "3307:3306"

and then run the below command

docker-compose up --build


and then open up the node app shell
npx sequelize-cli db:migrate
npx sequelize-cli db:seed:all

or

open a new terminal and write docker-compose exec app sh (to open docker node shell on vscode)
then write the migrate and seed commands
-  npx sequelize-cli db:migrate
-  npx sequelize-cli db:seed:all


to migrate the tables and the data


docker system prune -a

radis- used for cache


-- --------------------------------

Redis:
We can say that redis is used to cached the data and can change the game of application database 




